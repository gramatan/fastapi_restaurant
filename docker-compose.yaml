version: '3.8'

services:
  db:
    container_name: ylab_postgres
    build:
      context: .
      dockerfile: Dockerfile-db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ylab -d resto" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ylab_fastapi
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PYTHONPATH=/app
      - SQLALCHEMY_DATABASE_URL=postgresql+asyncpg://ylab:no_secure_password@db/resto
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile-celery
    container_name: ylab_celery_beat
    environment:
      - BROKER_URL=pyamqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
      - db
      - web
      - redis
    command: [ "celery", "-A", "admin_task:celery_app", "beat", "--loglevel=info" ]

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile-celery
    container_name: ylab_celery_worker
    volumes:
      - /d/GitHub/fastapi_restaurant/admin:/app/admin
    environment:
      - BROKER_URL=pyamqp://guest:guest@rabbitmq:5672//
    depends_on:
      - rabbitmq
      - db
      - web
      - redis
    command: [ "celery", "-A", "admin_task:celery_app", "worker", "--loglevel=info", "--concurrency", "1", "-P", "solo"]

  rabbitmq:
    container_name: ylab_rabbitmq
    image: "rabbitmq:management"
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    container_name: ylab_redis
    image: redis:latest
    ports:
      - "6379:6379"

#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#    ports:
#      - "8081:8081"

volumes:
  postgres_data:
